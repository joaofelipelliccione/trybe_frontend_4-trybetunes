{"version":3,"sources":["services/userAPI.js","images/trybetunesLogoWhite.png","components/Header.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.jsx","pages/Album.jsx","pages/Favorites.jsx","components/Footer.jsx","images/trybetunesLogo.png","pages/Login.jsx","images/ilustracaoProfile.svg","pages/Profile.jsx","pages/ProfileEdit.jsx","images/notFoundMsg.png","pages/NotFound.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","Header","getUserInfo","a","setState","loading","username","state","this","id","src","logo","alt","to","React","Component","getMusics","fetch","mode","method","headers","request","json","requestJson","results","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","recoverFavorites","favSongs","addRemoveFavorites","target","trackInfo","props","checked","trackName","previewUrl","className","controls","kind","htmlFor","type","onClick","some","microObj","Album","getMusicsFromAlbum","match","params","musics","albumImg","artworkUrl100","albumName","collectionName","artist","artistName","map","index","Favorites","artworkUrl60","Footer","href","rel","Login","onInputChange","formElementValue","value","onRegisterClick","redirectToSearch","registerWithEnter","e","preventDefault","onChange","onKeyPress","event","key","placeholder","disabled","length","Profile","userInfo","illustration","ProfileEdit","NotFound","notFoundMessage","searchAlbumsAPI","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","Search","onSearchClick","userSearch","lastSearchedArtist","albuns","searchWithEnter","displaySearchBar","displayAlbuns","displayWarning","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3605adb.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/trybetunesLogoWhite.7907a040.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport logo from '../images/trybetunesLogoWhite.png'\nimport '../styles/Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      username: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => { // Engloba, entre outras coisas, a função assíncrona getUser(). Essa última, capta as informações do usuário no local storage. Por esse motivo, é importante que seja chamada assim que o componente for montado.\n    this.setState({ loading: true });\n\n    const response = await getUser();\n    const { name } = response;\n\n    this.setState({\n      loading: false,\n      username: name,\n    });\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n\n    return (\n      <header data-testid=\"header-component\">\n        <div id=\"logoAndUserBar\">\n          <img src={logo} alt=\"trybetunes-logo\" />\n          <Link to='/' data-testid=\"header-user-name\">Sair</Link>\n        </div>\n        <div id=\"linksBar\">\n          <Link to=\"/search\" data-testid=\"link-to-search\">Pesquisa</Link>\n          <Link to=\"/favorites\" data-testid=\"link-to-favorites\">Favoritas</Link>\n          <Link to=\"/profile\" data-testid=\"link-to-profile\">Perfil</Link>\n        </div>\n        { loading &&\n          <div id=\"loadingContainer\">\n            <span>Carregando...</span>\n          </div>\n        }\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`, { mode: 'cors', method: 'post', headers: { 'access-control-allow-origin': 'http://localhost:3000' } });\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport '../styles/MusicCard.css';\n\nclass MusicCard extends React.Component { // É chamado dentro de <Album /> e <Favorites />.\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoriteSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  recoverFavorites = async () => { // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos, referente às músicas favoritas, que estão salvas no local storage.\n    this.setState({ loading: true });\n\n    const favSongs = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      favoriteSongs: favSongs,\n    });\n  }\n\n  addRemoveFavorites = async ({ target }) => { // Engloba, entre outras coisas, as funções assíncronas addSong() e removeSong(). Essas últimas, marcam e desmarcam (respectivamente) uma determinada música como favorita, atualizando o local storage.\n    const { trackInfo } = this.props;\n    this.setState({ loading: true });\n\n    if (target.checked) {\n      await addSong(trackInfo);\n      await this.recoverFavorites();\n    } else {\n      await removeSong(trackInfo);\n      await this.recoverFavorites();\n      // window.location.reload(false);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { trackInfo: { trackName, previewUrl, trackId } } = this.props;\n    const { loading, favoriteSongs } = this.state;\n\n    return (\n      <div className=\"eachTrack\">\n        <p>{trackName}</p>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          <code>audio</code>\n        </audio>\n        <label htmlFor={ trackId }>\n          ❤️\n          <input\n            id={ trackId }\n            data-testid={ `checkbox-music-${trackId}` }\n            type=\"checkbox\"\n            name={ trackId }\n            onClick={ this.addRemoveFavorites }\n            checked={ favoriteSongs.some((microObj) => microObj.trackId === trackId) } // Se a 'trackId' do momento for encontrada na lista de favoritas, o checkbox será marcado (true).\n          />\n        </label>\n        {loading && <span>...</span>}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport '../styles/Album.css';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getMusicsFromAlbum();\n  }\n\n  getMusicsFromAlbum = async () => { // Engloba, entre outras coisas, a função assíncrona getMusics(). Essa última, realiza uma requisição para a API do Itunes que retorna um array de objetos onde, cada objeto, diz respeito à uma música de um determinado álbum.\n    const { match: { params: { id } } } = this.props; // O id é uma informação acumulada pelo próprio <Route /> que encapsula o componente React de classe \"Album\".\n\n    const response = await getMusics(id);\n\n    this.setState({ // O primeiro elemento do array (índice 0), oriundo da response, acumula informações do album e não de uma música específica, como ocorre nos elementos de índice >= 1.\n      musics: response,\n      albumImg: response[0].artworkUrl100,\n      albumName: response[0].collectionName,\n      artist: response[0].artistName,\n    });\n  }\n\n  render() {\n    const { musics, albumImg, albumName, artist } = this.state;\n    return (\n      <div id=\"page-album\" data-testid=\"page-album\">\n        <Header />\n        <main id=\"albumPageMain\">\n          <section id=\"albumInfoContainer\">\n            <img src={ albumImg } alt={ albumName } />\n            <h4 data-testid=\"album-name\">{ albumName }</h4>\n            <p data-testid=\"artist-name\">{ artist }</p>\n          </section>\n          <section id=\"tracksListContainer\">\n            {musics.map((microObj, index) => (\n              index > 0 && <MusicCard trackInfo={ microObj } key={ microObj.trackId } />\n              // O primeiro elemento do array (índice 0) acumula informações do album e não de uma música específica.\n            ))}\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport '../styles/Favorites.css';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favoriteSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  componentDidUpdate() { // Importante para que, quando uma música favorita for removida, ela pare de ser renderizada na página.\n    this.recoverFavorites();\n  }\n\n  recoverFavorites = async () => { // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos referente às músicas favoritas, que estão salvas no local storage.\n    const favSongs = await getFavoriteSongs();\n\n    this.setState({\n      favoriteSongs: favSongs,\n    });\n  }\n\n  render() {\n    const { favoriteSongs } = this.state;\n\n    return (\n      <div id=\"page-favorites\" data-testid=\"page-favorites\">\n        <Header />\n        <main id=\"favoritesPageMain\">\n          {favoriteSongs.map((microObj) => (\n            <div key={ microObj.trackId } className=\"eachFavTrack\">\n              <img src={ microObj.artworkUrl60 } alt={ microObj.collectionName } />\n              <span id=\"artistNameFav\" >{ microObj.artistName }</span>\n              <MusicCard trackInfo={ microObj } key={ microObj.trackId } />\n            </div>\n          ))}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport '../styles/Footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return(\n      <footer>\n        <span>\n          Developed by <a href=\"https://github.com/joaofelipelliccione\" rel=\"noopener noreferrer\" target=\"_blank\">João Felipe Pelliccione</a>\n        </span>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/trybetunesLogo.86bba9a0.png\";","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport { createUser } from '../services/userAPI';\nimport logo from '../images/trybetunesLogo.png'\nimport '../styles/Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      loading: false,\n      redirectToSearch: false,\n    };\n  }\n\n  onInputChange = ({ target }) => { // Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ [name]: formElementValue });\n  }\n\n  onRegisterClick = async () => { // Engloba, entre outras coisas, a função assíncrona createUser(). Essa última, simula uma requisição de criação de cadastro.\n    const { username } = this.state;\n    this.setState({ loading: true });\n\n    await createUser({ name: username }); // Salva as informações do usuário, no local storage.\n\n    this.setState({\n      loading: false,\n      redirectToSearch: true,\n    });\n  }\n\n  registerWithEnter = (e) => { // Permite fazer o login pressionando a tecla Enter.\n    e.preventDefault();\n    this.onRegisterClick();\n  }\n\n  render() {\n    const { username, loading, redirectToSearch } = this.state;\n    const numOfCharacters = 3; // O React pede para que declare uma constante, ao invés de utilizar o número na condicional.\n\n    // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n    if (loading) {\n      return (<span id=\"enteringMessage\">Entrando...</span>);\n    }\n\n    // O usuário será redirecionado para o path \"/search\" após se cadastrar na plataforma, ou seja, quando o estado \"redirectToSearch\" for true.\n    if (redirectToSearch) {\n      return (<Redirect to=\"/search\" />);\n    }\n\n    return (\n      <div>\n        <main data-testid=\"page-login\">\n          <img src={logo} alt=\"trybetunes-logo\" />\n          <form>\n            <label htmlFor=\"login-name-input\">\n              <input\n                id=\"login-name-input\"\n                data-testid=\"login-name-input\"\n                type=\"text\"\n                name=\"username\"\n                value={ username }\n                onChange={ this.onInputChange }\n                onKeyPress={ (event) => event.key === 'Enter' && this.registerWithEnter(event) }\n                placeholder=\"Nome\"\n              />\n            </label>\n            <br />\n            <button\n              id=\"login-button\"\n              data-testid=\"login-submit-button\"\n              type=\"button\"\n              disabled={ username.length < numOfCharacters } // O botão só será habilitado quando o estado 'username' tiver 3 caracteres ou mais.\n              onClick={ this.onRegisterClick }\n            >\n              Entrar\n            </button>\n          </form>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/ilustracaoProfile.002dfa45.svg\";","import React from 'react';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI'\nimport illustration from '../images/ilustracaoProfile.svg'\nimport '../styles/Profile.css';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      userInfo: {},\n    }\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => { // Engloba, entre outras coisas, a função assíncrona getUser(). Essa última, capta as informações do usuário no local storage. Por esse motivo, é importante que seja chamada assim que o componente for montado.\n    this.setState({ loading: true });\n\n    const response = await getUser();\n\n    this.setState({\n      loading: false,\n      userInfo: response,\n    });\n  }\n\n  render() {\n    const { loading, userInfo: { name } } = this.state;\n\n    return (\n      <div id=\"profilePage\" data-testid=\"page-profile\">\n        <Header />\n        <main id=\"profilePageMain\">\n          { !loading && <h3 id=\"profilePageMsg\">{`${name}, tudo certo com sua conta! Aproveite o Trybe Tunes!`}</h3> }\n          { !loading && <img src={illustration} alt=\"Ilustração SVG\" id=\"profilePageIllust\" /> }\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport Header from '../components/Header';\n\nclass ProfileEdit extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        Página de Edição de Perfil.\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","export default __webpack_public_path__ + \"static/media/notFoundMsg.526ef7b2.png\";","import React from 'react';\nimport Header from '../components/Header'\nimport notFoundMessage from '../images/notFoundMsg.png'\nimport '../styles/NotFound.css';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div id=\"notFoundPage\" data-testid=\"page-not-found\">\n        <Header />\n        <img id=\"notFoundImg\" src={notFoundMessage} alt=\"Página não encontrada.\"/>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI, { mode: 'cors', method: 'post', headers: { 'access-control-allow-origin': 'http://localhost:3000' } });\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../styles/Search.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      userSearch: '',\n      lastSearchedArtist: '',\n      albuns: [],\n    };\n  }\n\n  onInputChange = ({ target }) => { // Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ [name]: formElementValue });\n  }\n\n  onSearchClick = async () => { // Engloba, entre outras coisas, a função assíncrona searchAlbumsAPI(). Essa última, realiza uma requisição para a API do Itunes que retorna um array de objetos onde, cada objeto, diz respeito à um álbum musical de um determinado artista.\n    const { userSearch } = this.state;\n\n    this.setState({\n      loading: true,\n      lastSearchedArtist: userSearch,\n      userSearch: '',\n    });\n\n    const response = await searchAlbumsAPI(userSearch);\n\n    this.setState({\n      albuns: response,\n      loading: false,\n    });\n  }\n\n  searchWithEnter = (e) => { // Permite pesquisar pressionando a tecla Enter.\n    e.preventDefault();\n    this.onSearchClick();\n  }\n\n  displaySearchBar = () => { // Função que retorna os elementos HTML para que o usuário consiga pesquisar um determinado artista.\n    const { userSearch } = this.state;\n    const numOfCharacters = 2;\n\n    return (\n      <form id=\"searchArtistForm\">\n        <input\n          id=\"searchBar\"\n          data-testid=\"search-artist-input\"\n          type=\"text\"\n          name=\"userSearch\"\n          value={ userSearch }\n          onChange={ this.onInputChange }\n          onKeyPress={ (event) => event.key === 'Enter' && this.searchWithEnter(event) }\n          placeholder=\"Nome do Artista ou do Álbum\"\n        />\n        <button\n          id=\"search-button\"\n          data-testid=\"search-artist-button\"\n          type=\"button\"\n          disabled={ userSearch.length < numOfCharacters } // O botão só será habilitado quando o estado 'username' tiver 3 caracteres ou mais.\n          onClick={ this.onSearchClick }\n        >\n          🔎\n        </button>\n      </form>\n    );\n  }\n\n  displayAlbuns = () => { // Função que retorna o elemento HTML a ser renderizado quando o artista pesquisado apresenta álbuns.\n    const { lastSearchedArtist, albuns } = this.state;\n\n    return (\n      <div id=\"apiResultContainer2\">\n        <h3>{`Retorno da pesquisa por: ${lastSearchedArtist}`}</h3>\n        <div id=\"albunsContainer\">\n          {albuns.map(({ collectionId, artworkUrl100, collectionName, artistName }) => (\n            <div id=\"eachAlbum\" key={ collectionId }>\n              <img src={ artworkUrl100 } alt={ collectionName } />\n              <p>{ collectionName }</p>\n              <p>{ artistName }</p>\n              <Link\n                to={ `/album/${collectionId}` }\n                data-testid={ `link-to-album-${collectionId}` }\n              >\n                <span>Abrir Álbum</span>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  displayWarning = () => ( // Função que retorna o elemento HTML a ser renderizado quando o artista pesquisado não é achado.\n    <section id=\"apiResultContainer2\">\n      {}\n      <h3>Nenhum álbum foi encontrado até agora...</h3>\n    </section>\n  );\n\n  render() {\n    const { loading, albuns } = this.state;\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        <main id=\"searchPageMain\">\n          <section id=\"searchBarContainer\">\n            { loading ? <span>Carregando...</span> : this.displaySearchBar() }\n          </section>\n          <section id=\"apiResultContainer\">\n            { albuns.length > 0 ? this.displayAlbuns() : this.displayWarning() }\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/trybe_frontend_4-trybetunes/\" component={ Login } />\n          <Route exact path=\"/trybe_frontend_4-trybetunes/search\" component={ Search } />\n          <Route exact path=\"/trybe_frontend_4-trybetunes/album/:id\" render={ (props) => <Album { ...props } /> } />\n          <Route exact path=\"/trybe_frontend_4-trybetunes/favorites\" component={ Favorites } />\n          <Route exact path=\"/trybe_frontend_4-trybetunes/profile\" component={ Profile } />\n          <Route exact path=\"/trybe_frontend_4-trybetunes/profile/edit\" component={ ProfileEdit } />\n          <Route component={ NotFound } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}