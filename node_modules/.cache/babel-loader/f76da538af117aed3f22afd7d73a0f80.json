{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Album.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.getMusicsFromAlbum = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props; // O id é uma informação acumulada pelo próprio <Route /> que encapsula o componente React de classe \"Album\".\n\n      const response = await getMusics(id);\n      this.setState({\n        musics: response,\n        albumImg: response[0].artworkUrl100,\n        albumName: response[0].collectionName,\n        artist: response[0].artistName\n      });\n    };\n\n    this.state = {\n      musics: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMusicsFromAlbum();\n    const {\n      musics\n    } = this.state;\n  }\n\n  render() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    const {\n      musics,\n      albumImg,\n      albumName,\n      artist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"albumInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: albumImg,\n            alt: albumName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: albumName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Album.jsx"],"names":["React","PropTypes","Header","getMusics","Album","Component","constructor","getMusicsFromAlbum","match","params","id","props","response","setState","musics","albumImg","artworkUrl100","albumName","collectionName","artist","artistName","state","componentDidMount","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,kBAbc,GAaO,YAAY;AAC/B,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKC,KAA3C,CAD+B,CACmB;;AAElD,YAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACO,EAAD,CAAhC;AAEA,WAAKG,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEF,QADI;AAEZG,QAAAA,QAAQ,EAAEH,QAAQ,CAAC,CAAD,CAAR,CAAYI,aAFV;AAGZC,QAAAA,SAAS,EAAEL,QAAQ,CAAC,CAAD,CAAR,CAAYM,cAHX;AAIZC,QAAAA,MAAM,EAAEP,QAAQ,CAAC,CAAD,CAAR,CAAYQ;AAJR,OAAd;AAMD,KAxBa;;AAGZ,SAAKC,KAAL,GAAa;AACXP,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,kBAAL;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAa,KAAKO,KAAxB;AACD;;AAeDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACA,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBE,MAAAA,SAApB;AAA+BE,MAAAA;AAA/B,QAA0C,KAAKE,KAArD;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAS,UAAA,EAAE,EAAC,WAAZ;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGN,QAAX;AAAsB,YAAA,GAAG,EAAGE;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzCiC;;AA4CpCb,KAAK,CAACoB,SAAN,GAAkB;AAChBhB,EAAAA,KAAK,EAAEP,SAAS,CAACwB,KAAV,CAAgB;AACrBhB,IAAAA,MAAM,EAAER,SAAS,CAACwB,KAAV,CAAgB;AACtBf,MAAAA,EAAE,EAAET,SAAS,CAACyB;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AAQA,eAAevB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getMusicsFromAlbum();\n    const { musics } = this.state;\n  }\n\n  getMusicsFromAlbum = async () => {\n    const { match: { params: { id } } } = this.props; // O id é uma informação acumulada pelo próprio <Route /> que encapsula o componente React de classe \"Album\".\n\n    const response = await getMusics(id);\n\n    this.setState({\n      musics: response,\n      albumImg: response[0].artworkUrl100,\n      albumName: response[0].collectionName,\n      artist: response[0].artistName,\n    });\n  }\n\n  render() {\n    const { match: { params: { id } } } = this.props;\n    const { musics, albumImg, albumName, artist } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <main>\n          <section id=\"albumInfo\">\n            <img src={ albumImg } alt={ albumName }/>\n            <h5>{ albumName }</h5>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}