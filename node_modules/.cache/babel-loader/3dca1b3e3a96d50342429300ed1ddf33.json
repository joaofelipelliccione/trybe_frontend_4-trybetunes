{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/pages/Login.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport logo from '../images/trybetunesLogo.png';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = ({\n      target\n    }) => {\n      // Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\n      const {\n        name\n      } = target;\n      const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: formElementValue\n      });\n    };\n\n    this.onRegisterClick = async () => {\n      // Engloba, entre outras coisas, a função assíncrona createUser(). Essa última, simula uma requisição de criação de cadastro.\n      const {\n        username\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      await createUser({\n        name: username\n      }); // Salva as informações do usuário, no local storage.\n\n      this.setState({\n        loading: false,\n        redirectToSearch: true\n      });\n    };\n\n    this.state = {\n      username: '',\n      loading: false,\n      redirectToSearch: false\n    };\n  }\n\n  render() {\n    const {\n      username,\n      loading,\n      redirectToSearch\n    } = this.state;\n    const numOfCharacters = 3; // O React pede para que declare uma constante, ao invés de utilizar o número na condicional.\n    // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this);\n    } // O usuário será redirecionado para o path \"/search\" após se cadastrar na plataforma, ou seja, quando o estado \"redirectToSearch\" for true.\n\n\n    if (redirectToSearch) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      \"data-testid\": \"page-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"trybe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-name-input\",\n          children: [\"Insira seu nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"login-name-input\",\n            \"data-testid\": \"login-name-input\",\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: this.onInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"login-submit-button\",\n          type: \"button\",\n          disabled: username.length < numOfCharacters // O botão só será habilitado quando o estado 'username' tiver 3 caracteres ou mais.\n          ,\n          onClick: this.onRegisterClick,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/pages/Login.jsx"],"names":["React","Redirect","Loading","createUser","logo","Login","Component","constructor","onInputChange","target","name","formElementValue","type","checked","value","setState","onRegisterClick","username","state","loading","redirectToSearch","render","numOfCharacters","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAO,qBAAP;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,aAVc,GAUE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAAE;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAWD,MAAjB;AACA,YAAME,gBAAgB,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA6BH,MAAM,CAACI,OAApC,GAA8CJ,MAAM,CAACK,KAA9E;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACL,IAAD,GAAQC;AAAV,OAAd;AACD,KAfa;;AAAA,SAiBdK,eAjBc,GAiBI,YAAY;AAAE;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACA,WAAKH,QAAL,CAAc;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMhB,UAAU,CAAC;AAAEO,QAAAA,IAAI,EAAEO;AAAR,OAAD,CAAhB,CAJ4B,CAIU;;AAEtC,WAAKF,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,gBAAgB,EAAE;AAFN,OAAd;AAID,KA3Ba;;AAGZ,SAAKF,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,EADC;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKD;;AAqBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,QAA0C,KAAKF,KAArD;AACA,UAAMI,eAAe,GAAG,CAAxB,CAFO,CAEoB;AAE3B;;AACA,QAAIH,OAAJ,EAAa;AACX,0BAAQ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAPM,CASP;;;AACA,QAAIC,gBAAJ,EAAsB;AACpB,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AAED,wBACE;AAAM,qBAAY,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEhB,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,kBAAf;AAAA,sDAEE;AACE,YAAA,EAAE,EAAC,kBADL;AAEE,2BAAY,kBAFd;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,KAAK,EAAGa,QALV;AAME,YAAA,QAAQ,EAAG,KAAKT;AANlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AACE,yBAAY,qBADd;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAGS,QAAQ,CAACM,MAAT,GAAkBD,eAH/B,CAGiD;AAHjD;AAIE,UAAA,OAAO,EAAG,KAAKN,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAvEiC;;AA0EpC,eAAeX,KAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport logo from '../images/trybetunesLogo.png'\nimport '../styles/Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      loading: false,\n      redirectToSearch: false,\n    };\n  }\n\n  onInputChange = ({ target }) => { // Função que altera o valor de qualquer estado, sempre que um input for realizado no elemento onde ela está sendo chamada. || OBS: Para que tal função funcione, os 'name' de cada um dos elementos do Forms devem ser iguais ao nome dos estados.\n    const { name } = target;\n    const formElementValue = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({ [name]: formElementValue });\n  }\n\n  onRegisterClick = async () => { // Engloba, entre outras coisas, a função assíncrona createUser(). Essa última, simula uma requisição de criação de cadastro.\n    const { username } = this.state;\n    this.setState({ loading: true });\n\n    await createUser({ name: username }); // Salva as informações do usuário, no local storage.\n\n    this.setState({\n      loading: false,\n      redirectToSearch: true,\n    });\n  }\n\n  render() {\n    const { username, loading, redirectToSearch } = this.state;\n    const numOfCharacters = 3; // O React pede para que declare uma constante, ao invés de utilizar o número na condicional.\n\n    // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n    if (loading) {\n      return (<Loading />);\n    }\n\n    // O usuário será redirecionado para o path \"/search\" após se cadastrar na plataforma, ou seja, quando o estado \"redirectToSearch\" for true.\n    if (redirectToSearch) {\n      return (<Redirect to=\"/search\" />);\n    }\n\n    return (\n      <main data-testid=\"page-login\">\n        <img src={logo} alt=\"trybe\" />\n        <form>\n          <label htmlFor=\"login-name-input\">\n            Insira seu nome:\n            <input\n              id=\"login-name-input\"\n              data-testid=\"login-name-input\"\n              type=\"text\"\n              name=\"username\"\n              value={ username }\n              onChange={ this.onInputChange }\n            />\n          </label>\n          <br />\n          <button\n            data-testid=\"login-submit-button\"\n            type=\"button\"\n            disabled={ username.length < numOfCharacters } // O botão só será habilitado quando o estado 'username' tiver 3 caracteres ou mais.\n            onClick={ this.onRegisterClick }\n          >\n            Entrar\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}