{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Album.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.getAlbumMusics = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props; // O id é uma informação acumulada pelo próprio <Route /> que encapsula o componente React de classe \"Album\".\n\n      const response = await getMusics();\n      console.log(response);\n    };\n  }\n\n  componentDidMount() {\n    this.getAlbumMusics();\n  }\n\n  render() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), `A id do respectivo álbum é: ${id}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Album.jsx"],"names":["React","PropTypes","Header","getMusics","Album","Component","constructor","getAlbumMusics","match","params","id","props","response","console","log","componentDidMount","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,cARc,GAQG,YAAa;AAC5B,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKC,KAA3C,CAD4B,CACsB;;AAElD,YAAMC,QAAQ,GAAG,MAAMT,SAAS,EAAhC;AAEAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAda;AAEb;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AAUDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AAEA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,+BAA8BD,EAAG,EAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1BiC;;AA6BpCN,KAAK,CAACa,SAAN,GAAkB;AAChBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,KAAV,CAAgB;AACrBT,IAAAA,MAAM,EAAER,SAAS,CAACiB,KAAV,CAAgB;AACtBR,MAAAA,EAAE,EAAET,SAAS,CAACkB;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AAQA,eAAehB,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    this.getAlbumMusics();\n  }\n\n  getAlbumMusics = async () =>  {\n    const { match: { params: { id } } } = this.props; // O id é uma informação acumulada pelo próprio <Route /> que encapsula o componente React de classe \"Album\".\n\n    const response = await getMusics();\n\n    console.log(response);\n  }\n\n  render() {\n    const { match: { params: { id } } } = this.props;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {`A id do respectivo álbum é: ${id}`}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}