{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/components/MusicCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.addRemoveFavorites = async ({\n      target\n    }) => {\n      const {\n        checked\n      } = target;\n      const {\n        trackInfo\n      } = this.props;\n      console.log(trackInfo);\n      this.setState({\n        loading: true\n      });\n\n      if (checked) {\n        await addSong(trackInfo);\n      } else {\n        await removeSong(trackInfo);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      loading: false\n    };\n  }\n\n  render() {\n    const {\n      trackInfo: {\n        trackName,\n        previewUrl,\n        trackId\n      }\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eachTrack\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"favCheckbox\",\n        children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"favCheckbox\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          type: \"checkbox\",\n          name: trackId,\n          onChange: this.addRemoveFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/components/MusicCard.jsx"],"names":["React","PropTypes","Loading","addSong","removeSong","MusicCard","Component","constructor","addRemoveFavorites","target","checked","trackInfo","props","console","log","setState","loading","state","render","trackName","previewUrl","trackId","propTypes","shape","string","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,8BAApC;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,kBARc,GAQO,OAAO;AAAEC,MAAAA;AAAF,KAAP,KAAsB;AACzC,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAIN,OAAJ,EAAa;AACX,cAAMP,OAAO,CAACQ,SAAD,CAAb;AACD,OAFD,MAEO;AACL,cAAMP,UAAU,CAACO,SAAD,CAAhB;AACD;;AAED,WAAKI,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArBa;;AAGZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAiBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB;AAAb,QAAoD,KAAKT,KAA/D;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,KAAKC,KAAzB;;AAEA,QAAID,OAAJ,EAAa;AACX,0BAAQ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGC,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,4CAEE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,yBAAe,kBAAiBC,OAAQ,EAF1C;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,IAAI,EAAGA,OAJT;AAKE,UAAA,QAAQ,EAAG,KAAKb;AALlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AApDqC;;AAuDxCH,SAAS,CAACiB,SAAV,GAAsB;AACpBX,EAAAA,SAAS,EAAEV,SAAS,CAACsB,KAAV,CAAgB;AACzBJ,IAAAA,SAAS,EAAElB,SAAS,CAACuB,MADI;AAEzBJ,IAAAA,UAAU,EAAEnB,SAAS,CAACuB,MAFG;AAGzBH,IAAAA,OAAO,EAAEpB,SAAS,CAACwB;AAHM,GAAhB,EAIRC;AALiB,CAAtB;AAQA,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  addRemoveFavorites = async ({ target }) => {\n    const { checked } = target;\n    const { trackInfo } = this.props;\n    console.log(trackInfo)\n    this.setState({ loading: true });\n\n    if (checked) {\n      await addSong(trackInfo);\n    } else {\n      await removeSong(trackInfo);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { trackInfo: { trackName, previewUrl, trackId } } = this.props;\n    const { loading } = this.state;\n\n    if (loading) {\n      return (<Loading />);\n    }\n\n    return (\n      <div className=\"eachTrack\">\n        <p>{trackName}</p>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador n√£o suporta o elemento\n          <code>audio</code>\n        </audio>\n        <label htmlFor=\"favCheckbox\">\n          Favorita\n          <input\n            className=\"favCheckbox\"\n            data-testid={ `checkbox-music-${trackId}` }\n            type=\"checkbox\"\n            name={ trackId }\n            onChange={ this.addRemoveFavorites }\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackInfo: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}