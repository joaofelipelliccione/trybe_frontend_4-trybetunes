{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/components/Header.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.getUserInfo = async () => {\n      // Engloba, entre outras coisas, a função assíncrona getUser(). Essa última, capta as informações do usuário no local storage. Por esse motivo, é importante que seja chamada assim que o componente for montado.\n      this.setState({\n        loading: true\n      });\n      const response = await getUser();\n      const {\n        name\n      } = response;\n      this.setState({\n        loading: false,\n        username: name\n      });\n    };\n\n    this.state = {\n      loading: false,\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  render() {\n    const {\n      loading,\n      username\n    } = this.state; // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      \"data-testid\": \"header-component\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logoAndUserBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Logo Cabe\\xE7alho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"header-user-name\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"linksBar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          \"data-testid\": \"link-to-search\",\n          children: \"Pesquisa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/favorites\",\n          \"data-testid\": \"link-to-favorites\",\n          children: \"Favoritas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          \"data-testid\": \"link-to-profile\",\n          children: \"Perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/components/Header.jsx"],"names":["React","Link","Loading","getUser","Header","Component","constructor","getUserInfo","setState","loading","response","name","username","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,WAbc,GAaA,YAAY;AAAE;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMC,QAAQ,GAAG,MAAMP,OAAO,EAA9B;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAWD,QAAjB;AAEA,WAAKF,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZG,QAAAA,QAAQ,EAAED;AAFE,OAAd;AAID,KAvBa;;AAGZ,SAAKE,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE,KADE;AAEXG,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,WAAL;AACD;;AAcDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,OAAF;AAAWG,MAAAA;AAAX,QAAwB,KAAKC,KAAnC,CADO,CAGP;;AACA,QAAIJ,OAAJ,EAAa;AACX,0BAAQ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AAED,wBACE;AAAQ,qBAAY,kBAApB;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,yBAAY,kBAAjB;AAAA,oBAAqCG;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAmB,yBAAY,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,YAAT;AAAsB,yBAAY,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAoB,yBAAY,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA/CkC;;AAkDrC,eAAeR,MAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport { getUser } from '../services/userAPI';\nimport '../styles/Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      username: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  getUserInfo = async () => { // Engloba, entre outras coisas, a função assíncrona getUser(). Essa última, capta as informações do usuário no local storage. Por esse motivo, é importante que seja chamada assim que o componente for montado.\n    this.setState({ loading: true });\n\n    const response = await getUser();\n    const { name } = response;\n\n    this.setState({\n      loading: false,\n      username: name,\n    });\n  }\n\n  render() {\n    const { loading, username } = this.state;\n\n    // A mensagem \"Carregando\", contida no componente React de classe Loading, será renderizada quando o estado \"loading\" for true.\n    if (loading) {\n      return (<Loading />);\n    }\n\n    return (\n      <header data-testid=\"header-component\">\n        <div id=\"logoAndUserBar\">\n          <h1>Logo Cabeçalho</h1>\n          <div data-testid=\"header-user-name\">{username}</div>\n        </div>\n        <div id=\"linksBar\">\n          <Link to=\"/search\" data-testid=\"link-to-search\">Pesquisa</Link>\n          <Link to=\"/favorites\" data-testid=\"link-to-favorites\">Favoritas</Link>\n          <Link to=\"/profile\" data-testid=\"link-to-profile\">Perfil</Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}