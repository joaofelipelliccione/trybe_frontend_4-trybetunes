{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Favorites.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.recoverFavorites = async () => {\n      // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos, referente às músicas favoritas, que estão salvas no local storage.\n      this.setState({\n        loading: true\n      });\n      const favSongs = await getFavoriteSongs();\n      this.setState({\n        loading: false,\n        favoriteSongs: favSongs\n      });\n    };\n\n    this.addRemoveFavorites = async ({\n      target\n    }) => {\n      // Engloba, entre outras coisas, as funções assíncronas addSong() e removeSong(). Essas últimas, marcam e desmarcam (respectivamente) uma determinada música como favorita, atualizando o local storage.\n      this.setState({\n        loading: true\n      });\n\n      if (target.checked) {\n        await addSong();\n      }\n\n      this.setState({\n        loading: false,\n        favoriteSongs: favSongs\n      });\n    };\n\n    this.state = {\n      loading: false,\n      favoriteSongs: []\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"P\\xE1gina dos Favoritos.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-trybetunes/src/pages/Favorites.jsx"],"names":["React","Header","addSong","removeSong","getFavoriteSongs","Favorites","Component","constructor","recoverFavorites","setState","loading","favSongs","favoriteSongs","addRemoveFavorites","target","checked","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,gBAA9B,QAAsD,8BAAtD;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,gBAbc,GAaK,YAAY;AAAE;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEA,YAAMC,QAAQ,GAAG,MAAMP,gBAAgB,EAAvC;AAEA,WAAKK,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZE,QAAAA,aAAa,EAAED;AAFH,OAAd;AAID,KAtBa;;AAAA,SAwBdE,kBAxBc,GAwBO,OAAO;AAAEC,MAAAA;AAAF,KAAP,KAAsB;AAAE;AAC3C,WAAKL,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAII,MAAM,CAACC,OAAX,EAAoB;AAClB,cAAMb,OAAO,EAAb;AAED;;AAED,WAAKO,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZE,QAAAA,aAAa,EAAED;AAFH,OAAd;AAID,KApCa;;AAGZ,SAAKK,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE,KADE;AAEXE,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,gBAAL;AACD;;AA2BDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,qBAAY,gBAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA9CqC;;AAiDxC,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      favoriteSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  recoverFavorites = async () => { // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos, referente às músicas favoritas, que estão salvas no local storage.\n    this.setState({ loading: true });\n\n    const favSongs = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favoriteSongs: favSongs,\n    });\n  }\n\n  addRemoveFavorites = async ({ target }) => { // Engloba, entre outras coisas, as funções assíncronas addSong() e removeSong(). Essas últimas, marcam e desmarcam (respectivamente) uma determinada música como favorita, atualizando o local storage.\n    this.setState({ loading: true });\n\n    if (target.checked) {\n      await addSong();\n      \n    }\n\n    this.setState({\n      loading: false,\n      favoriteSongs: favSongs,\n    });\n  }\n\n  render() {\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        Página dos Favoritos.\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}