{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/pages/Favorites.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport '../styles/Favorites.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.recoverFavorites = async () => {\n      // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos referente às músicas favoritas, que estão salvas no local storage.\n      const favSongs = await getFavoriteSongs();\n      this.setState({\n        favoriteSongs: favSongs\n      });\n    };\n\n    this.state = {\n      favoriteSongs: []\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  componentDidUpdate() {\n    // Importante para que, quando uma música favorita for removida, ela pare de ser renderizada na página.\n    this.recoverFavorites();\n  }\n\n  render() {\n    const {\n      favoriteSongs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-favorites\",\n      \"data-testid\": \"page-favorites\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"favoritesPageMain\",\n        children: favoriteSongs.map(microObj => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eachFavTrack\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: microObj.artworkUrl60,\n            alt: microObj.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: true,\n            children: microObj.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MusicCard, {\n            trackInfo: microObj\n          }, microObj.trackId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, microObj.trackId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione.github.io/projetos-trybe/2-Frontend/04_trybetunes/src/pages/Favorites.jsx"],"names":["React","Header","MusicCard","getFavoriteSongs","Favorites","Component","constructor","recoverFavorites","favSongs","setState","favoriteSongs","state","componentDidMount","componentDidUpdate","render","map","microObj","artworkUrl60","collectionName","artistName","trackId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAO,yBAAP;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,gBAhBc,GAgBK,YAAY;AAAE;AAC/B,YAAMC,QAAQ,GAAG,MAAML,gBAAgB,EAAvC;AAEA,WAAKM,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KAtBa;;AAGZ,SAAKG,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,gBAAL;AACD;;AAEDM,EAAAA,kBAAkB,GAAG;AAAE;AACrB,SAAKN,gBAAL;AACD;;AAUDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAoB,KAAKC,KAA/B;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,qBAAY,gBAArC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,EAAE,EAAC,mBAAT;AAAA,kBACGD,aAAa,CAACK,GAAd,CAAmBC,QAAD,iBACjB;AAA8B,UAAA,SAAS,EAAC,cAAxC;AAAA,kCACE;AAAK,YAAA,GAAG,EAAGA,QAAQ,CAACC,YAApB;AAAmC,YAAA,GAAG,EAAGD,QAAQ,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,EAAE,MAAR;AAAA,sBAAYF,QAAQ,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAGH;AAAvB,aAAwCA,QAAQ,CAACI,OAAjD;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAWJ,QAAQ,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA1CqC;;AA6CxC,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport '../styles/Favorites.css';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favoriteSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.recoverFavorites();\n  }\n\n  componentDidUpdate() { // Importante para que, quando uma música favorita for removida, ela pare de ser renderizada na página.\n    this.recoverFavorites();\n  }\n\n  recoverFavorites = async () => { // Engloba, entre outras coisas, a função assíncrona getFavoriteSongs(). Essa última, recupera o array de objetos referente às músicas favoritas, que estão salvas no local storage.\n    const favSongs = await getFavoriteSongs();\n\n    this.setState({\n      favoriteSongs: favSongs,\n    });\n  }\n\n  render() {\n    const { favoriteSongs } = this.state;\n\n    return (\n      <div id=\"page-favorites\" data-testid=\"page-favorites\">\n        <Header />\n        <main id=\"favoritesPageMain\">\n          {favoriteSongs.map((microObj) => (\n            <div key={ microObj.trackId } className=\"eachFavTrack\">\n              <img src={ microObj.artworkUrl60 } alt={ microObj.collectionName } />\n              <span id >{ microObj.artistName }</span>\n              <MusicCard trackInfo={ microObj } key={ microObj.trackId } />\n            </div>\n          ))}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}